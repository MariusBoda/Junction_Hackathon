# DEMO Folder Contents

The `DEMO` folder contains five key scripts for creating and viewing 3D models from 2D SVG floor maps:

- **`filter.py`**: Helper script for preprocessing 2D SVG floor maps based on user selections in the interface.
- **`get_stroke_widths.py`**: Helper script for retrieving stroke widths in the SVG floor maps, aiding in filtering and preprocessing.
- **`multi_2d_to_3d.py`**: Helper script for generating a 3D model from multiple 2D floor maps (e.g., floors 1-7).
- **`web_app.py`**: A Streamlit application that launches a localhost web UI, enabling users to upload a folder of SVG floor maps, process them, and launch Blender to view the generated 3D model. Saves output as `output.blend`, which can later be exported as GLB.
- **`display_3d_model.py`**: A Streamlit application for viewing the 3D model in a browser after uploading the GLB file.

---

### Demo Videos

[Demo Videos](https://drive.google.com/file/d/18aUhQWOFmRV8kD4NR1utztUxzUA4NuKR/view?usp=share_link)

---

### Requirements

- **Blender**
- **Various libraries**
- **Terminal**

---

### How to Run the Demo

#### **1. Running `web_app.py`**

1. **Open `web_app.py`:**  
   - Import all required dependencies.
   - Ensure Blender is installed on your computer.
   - Locate the `<run_blender_script>` function in `web_app.py` and update the line:
     ```python
     "/Applications/Blender.app/Contents/MacOS/Blender",  # Blender executable
     ```
     with the correct path to your Blender executable.

2. **Open Terminal & Run Streamlit App**  
   - Run the following command, replacing `<FILE LOCATION>` with the full path to `web_app.py`:
     ```bash
     streamlit run <FILE LOCATION of web_app.py>
     ```
   - This will open the Streamlit application in your browser.

3. **Follow On-Screen Instructions**  
   - In the Streamlit app:
     - Provide the directory path to your SVG files (e.g., `/Users/marius/Documents/GitHub/Junction_Hackathon/Material to share/Site 1/svg_output`).
     - Upload elevator files located in `Material to share` under each site folder.
     - Press **Apply**.

4. **Select Stroke Width**  
   - Recommended options:
     - For **Site 1**: Choose `0.3` and `1`.
     - For **Site 2**: Choose `0.25`.

5. **Process SVGs**  
   - Click **Process SVGs** to start the conversion process (this may take up to a minute). Blender will automatically open, showing the generated 3D model with the elevator and shaft.

---

#### **2. Running `display_3d_model.py`**

1. **Install Dependencies**

2. **Run the `web_app.py` Demo**  
   - Follow steps in `web_app.py` to generate an `output.blend` file.
   - Export this file as a **GLB** format from Blender. Alternatively, use the `site_1.glb` file in the `DEMO` folder if you prefer to skip the generation step.

3. **Open Terminal & Run `display_3d_model.py`**  
   - Run the following command in Terminal, replacing `<FILE LOCATION>` with the full path:
     ```bash
     streamlit run <FILE LOCATION of display_3d_model.py>
     ```

4. **Upload the GLB File**  
   - In the browser app, upload the `.GLB` file created in Step 2.
   - The 3D model visualization will open in your browser, allowing for easy, web-based 3D model interaction.
